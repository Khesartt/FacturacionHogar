// <auto-generated />
using System;
using FacturacionHogar.Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FacturacionHogar.infraestructure.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FacturacionHogar.models.domain.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Identification")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("FacturacionHogar.models.domain.LeaseReceipt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<string>("LeaseAddress")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LeaseAmount")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LeaseAmountInWords")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LeaseDescription")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("FacturacionHogar.models.domain.SampleOfService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CurrentDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("CurrentSample")
                        .HasColumnType("decimal");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<long>("IdService")
                        .HasColumnType("bigint");

                    b.Property<decimal>("LastSample")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdService");

                    b.ToTable("LecturasPorServicio");
                });

            modelBuilder.Entity("FacturacionHogar.models.domain.SamplesHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Sample")
                        .HasColumnType("decimal");

                    b.Property<DateTime>("SampleDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("historiaDeLecturas");
                });

            modelBuilder.Entity("FacturacionHogar.models.domain.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("FacturacionHogar.models.domain.LeaseReceipt", b =>
                {
                    b.HasOne("FacturacionHogar.models.domain.Client", null)
                        .WithMany()
                        .HasForeignKey("IdClient")
                        .HasConstraintName("FK_IdClientByLeaseReceipt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacturacionHogar.models.domain.SampleOfService", b =>
                {
                    b.HasOne("FacturacionHogar.models.domain.Client", null)
                        .WithMany()
                        .HasForeignKey("IdClient")
                        .HasConstraintName("FK_IdClientBySample")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacturacionHogar.models.domain.Service", null)
                        .WithMany()
                        .HasForeignKey("IdService")
                        .HasConstraintName("FK_IdServiceBySample")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
